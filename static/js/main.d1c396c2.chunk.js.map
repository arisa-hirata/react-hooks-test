{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["URL","App","React","useState","stories","setStories","error","setError","event","a","axios","get","result","data","hits","type","onClick","map","story","href","url","title","objectID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,EAAM,uCAqCGC,MAnCf,WAAgB,IAAD,EACiBC,IAAMC,SAAS,IADhC,mBACNC,EADM,KACGC,EADH,OAEaH,IAAMC,SAAS,MAF5B,mBAENG,EAFM,KAECC,EAFD,iDAIb,WAA2BC,GAA3B,eAAAC,EAAA,+EAImBC,IAAMC,IAAN,UAAaX,EAAb,iBAJnB,OAIIY,EAJJ,OAMIP,EAAWO,EAAOC,KAAKC,MAN3B,gDAQIP,EAAS,EAAD,IARZ,0DAJa,sBAgBb,OACE,gCACE,wBAAQQ,KAAK,SAASC,QAlBb,4CAkBT,2BAICV,GAAS,4DAEV,6BACGF,EAAQa,KAAI,SAACC,GAAD,OACX,6BACE,mBAAGC,KAAMD,EAAME,IAAf,SAAqBF,EAAMG,SADpBH,EAAMI,mBCnBVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1c396c2.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst URL = 'https://hn.algolia.com/api/v1/search';\n\nfunction App() {\n  const [stories, setStories] = React.useState([]);\n  const [error, setError] = React.useState(null);\n\n  async function handleFetch(event) {\n    let result;\n\n    try {\n      result = await axios.get(`${URL}?query=React`);\n\n      setStories(result.data.hits);\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleFetch}>\n        Fetch Stories\n      </button>\n\n      {error && <span>Something went wrong ...</span>}\n\n      <ul>\n        {stories.map((story) => (\n          <li key={story.objectID}>\n            <a href={story.url}>{story.title}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}